[tool.poetry]
name = "Cocoon"
version = "1.0.2"
description = "cocoon backend"
authors = ["Ruben Decrop <ruben@kosk.be>"]

packages = [
    { include = "cocoon", from = "backend" }
]

[tool.poetry.dependencies]
python = "^3.11"
toml = "^0.10.2"
gunicorn = "^21.2.0"
python-dotenv = "^1.0.1"
openpyxl = "^3.1.2"
asyncssh = "^2.14.2"
reddevil = {path = "libs/reddevil-3.4.1-py3-none-any.whl"}

[tool.poetry.group.dev.dependencies]
black = "^23"
pytest = "^7"
pytest-asyncio = "^0.23.5"
toml = "^0.10.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 88
indent-width = 4

[tool.ruff.lint]
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.per-file-ignores]
"**/__init__.py" = ["E402"]

[tool.poe.tasks.gcp_init]
shell = """
    gcloud config configurations activate cocoon
    gcloud auth application-default login
"""
help = "activate GCP cocoon project"

[tool.poe.tasks.be_run]
cmd = "poetry run uvicorn cocoon.main:app --reload"
help = "run fasyapi in backend"

[tool.poe.tasks.fe_run]
shell = """ 
    pushd frontend
    yarn dev
    popd
"""
help = "run yarn dev in frontend"

[tool.poe.tasks.fe_build]
shell = """ 
    pushd frontend
    yarn 
    popd
"""
help = "run yarn in frontend"